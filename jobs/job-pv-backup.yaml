apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv
spec:
  capacity:
    storage: 10Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce  # Ek node par sirf ek pod access kar sakta hai
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: "/mnt/disks/vol1"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - "my-kind-cluster-worker2"  # Ye volume sirf is node par available hoga
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi  # 10 Megabytes request
  storageClassName: local-storage

---

apiVersion: batch/v1
kind: Job
metadata:
  name: backup-job
  labels:
    app: backup
spec:
  backoffLimit: 3
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: backup
    spec:
      restartPolicy: OnFailure
      containers:
      - name: backup
        image: busybox
        command: ["sh", "-c", "tar czf /backup/backup-$(date +%Y%m%d%H%M%S).tar.gz /data && echo 'Backup complete'"]
        volumeMounts:
        - name : pod-volume
          mountPath: /data
        - name: backup-volume
          mountPath: /backup
      volumes:
  
      - name : pod-volume
        hostPath:
          path: /mnt/data
          type: DirectoryOrCreate
      - name: backup-volume
        persistentVolumeClaim:
          claimName: local-pvc
      nodeSelector:
       kubernetes.io/hostname: my-kind-cluster-worker2

